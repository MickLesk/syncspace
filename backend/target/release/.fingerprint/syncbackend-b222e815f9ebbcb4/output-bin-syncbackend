{"$message_type":"diagnostic","message":"closure is expected to take 0 arguments, but it takes 1 argument","code":{"code":"E0593","explanation":"You tried to supply an `Fn`-based type with an incorrect number of arguments\nthan what was expected.\n\nErroneous code example:\n\n```compile_fail,E0593\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    // [E0593] closure takes 1 argument but 0 arguments are required\n    foo(|y| { });\n}\n```\n\nYou have to provide the same number of arguments as expected by the `Fn`-based\ntype. So to fix the previous example, we need to remove the `y` argument:\n\n```\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    foo(|| { }); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":26135,"byte_end":26143,"line_start":662,"line_end":662,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(move |_| {","highlight_start":10,"highlight_end":18}],"label":"expected closure that takes 0 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":26144,"byte_end":26152,"line_start":662,"line_end":662,"column_start":19,"column_end":27,"is_primary":false,"text":[{"text":"        .and_then(move |_| {","highlight_start":19,"highlight_end":27}],"label":"takes 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `{closure@src\\main.rs:662:19: 662:27}` to implement `warp::generic::Func<()>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0593]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: closure is expected to take 0 arguments, but it takes 1 argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:662:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(move |_| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtakes 1 argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected closure that takes 0 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `{closure@src\\main.rs:662:19: 662:27}` to implement `warp::generic::Func<()>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `or` exists for struct `AndThen<And<..., ...>, ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":27049,"byte_end":27073,"line_start":687,"line_end":688,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    frontend_root","highlight_start":5,"highlight_end":18},{"text":"        .or(frontend_static)","highlight_start":1,"highlight_end":10}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":27073,"byte_end":27075,"line_start":688,"line_end":688,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"        .or(frontend_static)","highlight_start":10,"highlight_end":12}],"label":"method cannot be called on `AndThen<And<..., ...>, ...>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\LeskowitzMickey\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\warp-0.3.7\\src\\filter\\and_then.rs","byte_start":263,"byte_end":287,"line_start":12,"line_end":12,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct AndThen<T, F> {","highlight_start":1,"highlight_end":25}],"label":"doesn't satisfy `_: FilterBase` or `_: Filter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\nwhich is required by `warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`\n`&warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\nwhich is required by `&warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`\n`&mut warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\nwhich is required by `&mut warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `or` exists for struct `AndThen<And<..., ...>, ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:688:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m687\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    frontend_root\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m688\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(frontend_static)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `AndThen<And<..., ...>, ...>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\LeskowitzMickey\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\warp-0.3.7\\src\\filter\\and_then.rs:12:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct AndThen<T, F> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: FilterBase` or `_: Filter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`\u001b[0m\n\u001b[0m            `&warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`\u001b[0m\n\u001b[0m            `&mut warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&mut warp::filter::and_then::AndThen<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, {closure@src\\main.rs:662:19: 662:27}>: warp::Filter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0593, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0593, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0593`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0593`.\u001b[0m\n"}
