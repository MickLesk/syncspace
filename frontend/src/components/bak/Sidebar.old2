<!--
  SidebarV2.svelte - Enhanced Sidebar with DaisyUI
  
  Modern sidebar navigation with DaisyUI menu classes, drawer mode, and smooth animations.
  
  Features:
  - DaisyUI menu components
  - Collapsible sidebar
  - Mobile drawer mode
  - Active state indicators
  - Storage usage indicator
  - User profile card
  - Theme toggle
  - Category separators
  - Smooth animations
  
  Props:
  - None (controlled by stores)
-->

<script>
  import {
    currentView,
    currentTheme,
    sidebarCollapsed,
    currentLang,
  } from "../stores/ui";
  import { auth } from "../stores/auth";
  import { t } from "../i18n";
  import ButtonV2 from "./ui/ButtonV2.svelte";

  // Navigation items
  $: navItems = [
    {
      id: "files",
      icon: "folder-fill",
      label: t($currentLang, "files"),
      category: "main",
    },
    {
      id: "shared",
      icon: "share-fill",
      label: t($currentLang, "shared"),
      category: "main",
    },
    {
      id: "favorites",
      icon: "star-fill",
      label: t($currentLang, "favorites"),
      category: "main",
    },
    {
      id: "storage",
      icon: "pie-chart-fill",
      label: "Storage",
      category: "tools",
    },
    {
      id: "activity",
      icon: "clock-history",
      label: "Activity",
      category: "tools",
    },
    { id: "duplicates", icon: "files", label: "Duplicates", category: "tools" },
    {
      id: "backup",
      icon: "cloud-arrow-up-fill",
      label: "Backup",
      category: "tools",
    },
    {
      id: "trash",
      icon: "trash-fill",
      label: t($currentLang, "trash"),
      category: "system",
    },
    {
      id: "users",
      icon: "people-fill",
      label: t($currentLang, "users"),
      category: "system",
    },
    {
      id: "settings",
      icon: "gear-fill",
      label: t($currentLang, "settings"),
      category: "system",
    },
  ];

  // Group by category
  $: mainItems = navItems.filter((item) => item.category === "main");
  $: toolsItems = navItems.filter((item) => item.category === "tools");
  $: systemItems = navItems.filter((item) => item.category === "system");

  // Mock storage data
  let storageUsed = 42.5; // GB
  let storageTotal = 50; // GB
  $: storagePercent = (storageUsed / storageTotal) * 100;

  function selectView(viewId) {
    currentView.set(viewId);
  }

  function toggleTheme() {
    const newTheme = $currentTheme === "light" ? "dark" : "light";
    currentTheme.set(newTheme);
    document.documentElement.setAttribute(
      "data-theme",
      newTheme === "dark" ? "syncspace-dark" : "syncspace"
    );
  }

  function toggleSidebar() {
    sidebarCollapsed.toggle();
  }

  function handleLogout() {
    auth.logout();
  }
</script>

<aside class="sidebar-container" class:collapsed={$sidebarCollapsed}>
  <!-- Sidebar Header -->
  <div class="sidebar-header">
    <div class="brand">
      {#if !$sidebarCollapsed}
        <div class="logo-wrapper">
          <svg
            class="logo-icon"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 2L3 14h8l-1 8 10-12h-8l1-8z"
              fill="url(#logo-gradient)"
            />
            <defs>
              <linearGradient id="logo-gradient" x1="3" y1="2" x2="21" y2="22">
                <stop offset="0%" stop-color="#667eea" />
                <stop offset="100%" stop-color="#764ba2" />
              </linearGradient>
            </defs>
          </svg>
          <div class="brand-text">
            <h1 class="brand-name">SyncSpace</h1>
            <p class="brand-tagline">Cloud Storage</p>
          </div>
        </div>
      {:else}
        <svg
          class="logo-icon-collapsed"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M13 2L3 14h8l-1 8 10-12h-8l1-8z"
            fill="url(#logo-gradient-collapsed)"
          />
          <defs>
            <linearGradient
              id="logo-gradient-collapsed"
              x1="3"
              y1="2"
              x2="21"
              y2="22"
            >
              <stop offset="0%" stop-color="#667eea" />
              <stop offset="100%" stop-color="#764ba2" />
            </linearGradient>
          </defs>
        </svg>
      {/if}
    </div>

    <button
      class="btn btn-ghost btn-sm btn-circle collapse-btn"
      on:click={toggleSidebar}
      aria-label={$sidebarCollapsed ? "Expand sidebar" : "Collapse sidebar"}
    >
      <i class="bi bi-{$sidebarCollapsed ? 'chevron-right' : 'chevron-left'}"
      ></i>
    </button>
  </div>

  <!-- Navigation Menu -->
  <nav class="sidebar-nav">
    <ul class="menu menu-compact">
      <!-- Main Section -->
      {#if !$sidebarCollapsed}
        <li class="menu-title">
          <span>Main</span>
        </li>
      {/if}
      {#each mainItems as item}
        <li>
          <button
            class="menu-item"
            class:active={$currentView === item.id}
            on:click={() => selectView(item.id)}
            title={$sidebarCollapsed ? item.label : ""}
          >
            <i class="bi bi-{item.icon} text-lg"></i>
            {#if !$sidebarCollapsed}
              <span>{item.label}</span>
            {/if}
          </button>
        </li>
      {/each}

      <!-- Tools Section -->
      {#if !$sidebarCollapsed}
        <li class="menu-title">
          <span>Tools</span>
        </li>
      {/if}
      {#each toolsItems as item}
        <li>
          <button
            class="menu-item"
            class:active={$currentView === item.id}
            on:click={() => selectView(item.id)}
            title={$sidebarCollapsed ? item.label : ""}
          >
            <i class="bi bi-{item.icon} text-lg"></i>
            {#if !$sidebarCollapsed}
              <span>{item.label}</span>
            {/if}
          </button>
        </li>
      {/each}

      <!-- System Section -->
      {#if !$sidebarCollapsed}
        <li class="menu-title">
          <span>System</span>
        </li>
      {/if}
      {#each systemItems as item}
        <li>
          <button
            class="menu-item"
            class:active={$currentView === item.id}
            on:click={() => selectView(item.id)}
            title={$sidebarCollapsed ? item.label : ""}
          >
            <i class="bi bi-{item.icon} text-lg"></i>
            {#if !$sidebarCollapsed}
              <span>{item.label}</span>
            {/if}
          </button>
        </li>
      {/each}
    </ul>
  </nav>

  <!-- Sidebar Footer -->
  <div class="sidebar-footer">
    <!-- Storage Indicator -->
    {#if !$sidebarCollapsed}
      <div class="storage-card card compact bg-base-200">
        <div class="card-body">
          <div class="flex items-center justify-between mb-2">
            <span class="text-sm font-semibold">Storage</span>
            <span class="text-xs opacity-70">{storagePercent.toFixed(0)}%</span>
          </div>
          <progress
            class="progress progress-primary w-full"
            value={storagePercent}
            max="100"
          ></progress>
          <div class="text-xs opacity-70 mt-1">
            {storageUsed} GB of {storageTotal} GB used
          </div>
          <button
            class="btn btn-primary btn-xs btn-block mt-3"
            on:click={() => selectView("storage")}
          >
            Manage Storage
          </button>
        </div>
      </div>
    {/if}

    <!-- Theme Toggle -->
    <div class="divider my-2"></div>

    <button
      class="btn btn-ghost btn-sm {$sidebarCollapsed
        ? 'btn-circle'
        : 'btn-block justify-start'}"
      on:click={toggleTheme}
    >
      {#if $currentTheme === "light"}
        <i class="bi bi-moon-stars-fill text-lg"></i>
      {:else}
        <i class="bi bi-sun-fill text-lg"></i>
      {/if}
      {#if !$sidebarCollapsed}
        <span>{$currentTheme === "light" ? "Dark Mode" : "Light Mode"}</span>
      {/if}
    </button>

    <!-- User Profile -->
    {#if !$sidebarCollapsed}
      <div class="user-profile card bg-base-200 mt-2">
        <div class="card-body p-3">
          <div class="flex items-center gap-3">
            <div class="avatar online placeholder">
              <div class="bg-primary text-primary-content rounded-full w-10">
                <span class="text-lg"
                  >{$auth.username?.charAt(0).toUpperCase() || "U"}</span
                >
              </div>
            </div>
            <div class="flex-1 min-w-0">
              <div class="font-semibold text-sm truncate">
                {$auth.username || "User"}
              </div>
              <div class="text-xs opacity-70">Administrator</div>
            </div>
            <div class="dropdown dropdown-top dropdown-end">
              <button class="btn btn-ghost btn-xs btn-circle">
                <i class="bi bi-three-dots-vertical"></i>
              </button>
              <ul
                class="dropdown-content menu p-2 shadow bg-base-100 rounded-box w-52 mb-2"
              >
                <li>
                  <button on:click={() => selectView("profile")}>
                    <i class="bi bi-person"></i> Profile
                  </button>
                </li>
                <li>
                  <button on:click={() => selectView("settings")}>
                    <i class="bi bi-gear"></i> Settings
                  </button>
                </li>
                <li class="divider"></li>
                <li>
                  <button on:click={handleLogout} class="text-error">
                    <i class="bi bi-box-arrow-right"></i> Logout
                  </button>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    {:else}
      <div class="dropdown dropdown-top dropdown-end">
        <button class="btn btn-ghost btn-circle avatar placeholder">
          <div class="bg-primary text-primary-content rounded-full w-10">
            <span>{$auth.username?.charAt(0).toUpperCase() || "U"}</span>
          </div>
        </button>
        <ul
          class="dropdown-content menu p-2 shadow bg-base-100 rounded-box w-52 mb-2"
        >
          <li>
            <button on:click={() => selectView("profile")}>
              <i class="bi bi-person"></i> Profile
            </button>
          </li>
          <li>
            <button on:click={() => selectView("settings")}>
              <i class="bi bi-gear"></i> Settings
            </button>
          </li>
          <li class="divider"></li>
          <li>
            <button on:click={handleLogout} class="text-error">
              <i class="bi bi-box-arrow-right"></i> Logout
            </button>
          </li>
        </ul>
      </div>
    {/if}
  </div>
</aside>

<style>
  .sidebar-container {
    width: 280px;
    height: 100vh;
    background: var(--color-surface);
    border-right: 1px solid var(--color-outline);
    display: flex;
    flex-direction: column;
    transition: width var(--duration-300) var(--ease-emphasized);
    overflow: hidden;
  }

  .sidebar-container.collapsed {
    width: 80px;
  }

  /* Header */
  .sidebar-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem;
    border-bottom: 1px solid var(--color-outline);
    min-height: 4rem;
  }

  .brand {
    flex: 1;
    overflow: hidden;
  }

  .logo-wrapper {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .logo-icon,
  .logo-icon-collapsed {
    width: 32px;
    height: 32px;
    flex-shrink: 0;
  }

  .brand-text {
    overflow: hidden;
  }

  .brand-name {
    font-size: 1.25rem;
    font-weight: 700;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0;
    line-height: 1.2;
  }

  .brand-tagline {
    font-size: 0.75rem;
    opacity: 0.6;
    margin: 0;
  }

  .collapse-btn {
    flex-shrink: 0;
  }

  /* Navigation */
  .sidebar-nav {
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 0.5rem;
  }

  .sidebar-nav::-webkit-scrollbar {
    width: 6px;
  }

  .sidebar-nav::-webkit-scrollbar-track {
    background: transparent;
  }

  .sidebar-nav::-webkit-scrollbar-thumb {
    background: var(--color-outline);
    border-radius: var(--radius-full);
  }

  .menu {
    padding: 0;
  }

  .menu-item {
    width: 100%;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    border: none;
    background: transparent;
    color: var(--color-on-surface);
    cursor: pointer;
    border-radius: var(--radius-lg);
    transition: all var(--duration-200) var(--ease-standard);
    font-size: 0.875rem;
    font-weight: 500;
    text-align: left;
    position: relative;
    overflow: hidden;
  }

  .menu-item::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background: var(--color-primary);
    transform: scaleY(0);
    transition: transform var(--duration-200) var(--ease-standard);
  }

  .menu-item:hover {
    background: var(--color-surface-container-high);
  }

  .menu-item:hover i {
    animation: pulse 0.6s ease-in-out;
  }

  .menu-item.active {
    background: linear-gradient(
      90deg,
      var(--color-primary-container) 0%,
      transparent 100%
    );
    color: var(--color-primary);
    font-weight: 600;
  }

  .menu-item.active::before {
    transform: scaleY(1);
  }

  .menu-item.active i {
    animation: pulse 1s ease-in-out infinite;
    color: var(--color-primary);
  }

  @keyframes pulse {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  .collapsed .menu-item {
    justify-content: center;
    padding: 0.75rem;
  }

  .menu-title {
    padding: 0.5rem 1rem;
    margin-top: 0.5rem;
  }

  .menu-title span {
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    opacity: 0.5;
  }

  /* Footer */
  .sidebar-footer {
    padding: 1rem;
    border-top: 1px solid var(--color-outline);
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .storage-card {
    animation: slideUp var(--duration-300) var(--ease-emphasized);
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .user-profile {
    animation: slideUp var(--duration-300) var(--ease-emphasized);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .sidebar-container {
      position: fixed;
      left: 0;
      top: 0;
      z-index: var(--z-fixed);
      transform: translateX(0);
    }

    .sidebar-container.collapsed {
      transform: translateX(-100%);
    }
  }
</style>
